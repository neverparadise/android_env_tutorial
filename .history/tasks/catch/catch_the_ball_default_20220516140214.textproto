# Copyright 2021 DeepMind Technologies Limited.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# proto-file: android_env/proto/task.proto
# proto-message: android_env.Task

id: "catch_the_ball_default"
name: "Catch The Ball - Default"
description: "Catch the falling ball with the paddle."

setup_steps: [
  {
    adb_call: {
      install_apk: {
        filesystem: {
          path: "/home/slowlab/Projects/AndroidEnv/android_env/tasks/catch/2020.07.21-catch-the-ball-debug.apk"
        }
      }
    }
    success_condition: {
      check_install: {
        package_name: "com.example.catchtheball"
        timeout_sec: 10.0
      }
    }
  },
  { adb_call: { rotate: { orientation: PORTRAIT_0 } } }
]

reset_steps: [
  {
    adb_call: {
      start_activity: {
        full_activity: "com.example.catchtheball/com.example.catchtheball.MainActivity"
        extra_args: [
            "--ez", '"RL_TASK_ENABLED"', '"true"',
            "--es", '"RL_TASK_GAME_CONFIG"', '"{\\"lives\\":0}"'
        ]
      }
    }
    success_condition: {
      wait_for_app_screen: {
        app_screen: {
          activity: "com.example.catchtheball/com.example.catchtheball.MainActivity"
          view_hierarchy_path: [
          ]
        }
        timeout_sec: 10.0
      }
      num_retries: 10
    }
  },
  {
    adb_call: {
      start_screen_pinning: {
        full_activity: "com.example.catchtheball/com.example.catchtheball.MainActivity"
      }
    }
  }
]

expected_app_screen: {
  activity: "com.example.catchtheball/com.example.catchtheball.MainActivity"
  view_hierarchy_path: [
  ]
}

max_duration_sec: 60  # 1 minute.

log_parsing_config: {

  filters: ["AndroidRLTask:V"]

  log_regexps: {
    score: "^[Ss]core: ([-+]?[0-9]*\\.?[0-9]*)$"
    reward: "^[Rr]eward: ([-+]?[0-9]*\\.?[0-9]*)$"
    episode_end: "^episode[ _]end$"
    extra: "^extra: (?P<name>[^ ]*)[ ]?(?P<extra>.*)$"
    json_extra: "^json_extra: (?P<json_extra>.*)$"
  }
}

extras_spec: [
  # All of these a returned when the ball arrives at the bottom of the screen
  # The number of remaining lives
  { name: "lives" shape: [1], dtype: INT32},
  # The x,y coordinates of the centel of the ball
  { name: "ball" shape: [2], dtype: INT32},
  # The x,y coordinates of the center of the paddle
  { name: "paddle" shape: [2], dtype: INT32},
  # The paddle width
  { name: "paddle_width" shape: [1], dtype: INT32}
]
